{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"su",
				"super"
			],
			[
				"scope",
				"scope_price"
			],
			[
				"scop",
				"scope_price"
			],
			[
				"lis",
				"list_scope_total_meassurement"
			],
			[
				"to",
				"total_price"
			],
			[
				"ob",
				"objects"
			],
			[
				"chap",
				"chapter"
			],
			[
				"cha",
				"chapter_name"
			],
			[
				"pr",
				"project"
			],
			[
				"Chapter",
				"chapter_name"
			],
			[
				"chapter",
				"chapter_name"
			],
			[
				"fo",
				"font-size\tproperty"
			],
			[
				"mar",
				"margin\tproperty"
			],
			[
				"query",
				"queryset"
			],
			[
				"Pro",
				"Project"
			],
			[
				"me",
				"Meassurement"
			],
			[
				"in",
				"instance"
			],
			[
				"Sc",
				"Scope_Meassurements"
			],
			[
				"P",
				"Project"
			],
			[
				"Time",
				"Time_Sheet"
			],
			[
				"co",
				"contacts"
			],
			[
				"con",
				"contact_name"
			],
			[
				"d",
				"docket"
			],
			[
				"s",
				"self"
			],
			[
				"com",
				"company_email"
			],
			[
				"im",
				"image\tparameter"
			],
			[
				"th",
				"this\tkeyword"
			],
			[
				"ret",
				"return\tkeyword"
			],
			[
				"inv",
				"Invoice"
			],
			[
				"a",
				"auto\tmargin"
			],
			[
				"ma",
				"margin\tproperty"
			],
			[
				"m",
				"margin\tproperty"
			],
			[
				"mod",
				"models"
			],
			[
				"for",
				"ForeignKey"
			],
			[
				"pro",
				"projects"
			],
			[
				"M",
				"Model"
			],
			[
				"wid",
				"width"
			],
			[
				"st",
				"style\tAttr"
			],
			[
				"q",
				"query"
			],
			[
				"us",
				"user"
			],
			[
				"user",
				"user_type"
			],
			[
				"cl",
				"cleaned_data"
			],
			[
				"ac",
				"action\tAttr"
			],
			[
				"margi",
				"margin-top"
			],
			[
				"http",
				"HttpResponse"
			],
			[
				"dat",
				"data_json"
			],
			[
				"da",
				"data_json"
			],
			[
				"re",
				"results"
			],
			[
				"o",
				"objects"
			],
			[
				"out",
				"output2"
			],
			[
				"clie",
				"client_name"
			],
			[
				"clien",
				"client_list"
			],
			[
				"posit",
				"position_name"
			],
			[
				"de",
				"default"
			],
			[
				"mo",
				"models"
			],
			[
				"ch",
				"CharField"
			],
			[
				"n",
				"null"
			],
			[
				"mode",
				"Model"
			],
			[
				"Pr",
				"Project_Manager"
			],
			[
				"i",
				"IntegerField"
			],
			[
				"max",
				"max_length"
			],
			[
				"cli",
				"Cliente"
			],
			[
				"C",
				"Client"
			],
			[
				"w",
				"WAITING_FOR_APROVAL"
			],
			[
				"c",
				"CharField"
			],
			[
				"model",
				"models"
			],
			[
				"h",
				"h1\tTag"
			],
			[
				"f",
				"forms"
			],
			[
				"li",
				"listabotones"
			],
			[
				"tex",
				"textvariable"
			],
			[
				"t",
				"Tkinter"
			],
			[
				"ve",
				"ventana_principal"
			],
			[
				"I",
				"item"
			]
		]
	},
	"buffers":
	[
		{
			"file": "views.py",
			"settings":
			{
				"buffer_size": 1135,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "from django.db import models\nfrom django.db.models.signals import post_save,post_delete\nfrom django.dispatch import receiver\n\nclass Project(models.Model):\n\t\"\"\"docstring for invoice:\"\"\"\n\n\tACCEPTED='ACT'\n\tWAITING = 'WFA'\n\tOVERULLED= 'REJ'\n\tSTATE_TYPES = (\n\t\t(ACCEPTED, 'Accepted'),\n        (WAITING, 'Waiting'),\n        (OVERULLED, 'Overruled'),\n               )\n\t\n\tproject_name         = models.CharField(max_length=200, blank=True, null=True)\n\tproject_number       = models.CharField(max_length=200, blank=True)\n\tdate                 = models.DateField(blank=True, null=True)\n\tproject_address      = models.CharField(max_length=200, blank=True,null=True)\n\tstart_date           = models.DateField(blank=True, null=True)\n\tend_date             = models.DateField(blank=True, null=True)\n\tproject_manager      = models.ManyToManyField('users.Profile_Employee', blank=True,verbose_name=\"Project manager\",related_name='project_manager')\n\tsite_manager         = models.ManyToManyField('users.Profile_Employee', blank=True ,verbose_name=\"site manager\",related_name='site_manager')\n\tquantity_surveyor    = models.ManyToManyField('users.Profile_Employee', blank=True ,verbose_name=\"quantyty surveyor\",related_name='quantity_surveyor')\n\tforeman              = models.ManyToManyField('users.Profile_Employee', blank=True ,verbose_name=\"Foreman\",related_name='foreman')\n\tclient               = models.ForeignKey('users.Profile_client',on_delete=models.CASCADE,null=True ,blank=True,verbose_name=\"client\",related_name=\"client\")\n\tstate                = models.CharField(max_length=3, choices = STATE_TYPES,default=WAITING)\n\t\n\tdef __str__(self):\n\t\treturn   self.project_name\n\t\n#presupuestos {{{ pendient  asociar precio a precio capitulos }}}\nclass Scope (models.Model):\n\tcode            = models.CharField(\"Code\", max_length=200, blank=True,null=True )\n\tproject         = models.OneToOneField(Project, on_delete=models.CASCADE ,verbose_name=\"Project\")\n\tdate            = models.DateField(\"Date\", max_length=200, blank=True,null=True )\n\tvalid_until     = models.DateField('Valid untill',blank=True,null=True)\n\ttotal_price     = models.DecimalField(blank=True,null=True,decimal_places=2,max_digits=10)\n\n\tdef __str__(self):\n\t\treturn   self.project.project_name\n\n\n\t\n\t\n#signal \n@receiver(post_save, sender=Project)\ndef create_scope(sender, instance, created, **kwargs):\n\tif created:\n\t\tScope.objects.create( project=instance )\n\t\t\n\n\telse:\n\t\tpass\n\n@receiver(post_save, sender=Project)\ndef save_scope(sender, instance,**kwargs):\n    instance.scope.save()\n    \n    \n\n\n#fases del proyecto   {{ pendiente actualizar metodo save() para todas las listas de precios}}\nclass Phase(models.Model):\n\tphase_code        = models.IntegerField( )\n\tphase_name        = models.CharField('Phase name ',max_length=200, blank=True,null=True)\n\tcoments           = models.TextField(\"coments\", max_length=400, blank=True,null=True,default='coments' )\n\tstart_date        = models.DateField(blank=True, null=True)\n\tend_date          = models.DateField(blank=True, null=True)\n\tscope_price\t\t  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tinvoice_price     = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tplanif_price      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttarget_price      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\treal_price        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\n\n\tdef __str__(self):\n\t\treturn self.phase_name\n\n\n\tdef save(self):\n\n\t\tself.scope_meassurement = self.scope_meassurement_set.all().distinct()\n\t\tif self.scope_meassurement:\n\t\t\ttotal=0\n\t\t\tfor obj in self.scope_meassurement:\n\t\t\t\tmed=obj.total_meassurement*obj.entry.scope_unt_price\n\t\t\t\ttotal=total+med\n\t\t\tself.scope_price=total\n\t\tsuper(Phase, self).save()\n\n\n\n\t#capitulos del proyecto asocia precio a suma de partidas {{{ aun pendiente}}}\nclass Chapter (models.Model):\n\tcode              = models.IntegerField( )\n\tchapter_name      = models.CharField(\"Chapter name \", max_length=200, blank=True,null=True )\n\tquantity\t\t  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=10)\n\ttotal_price       = models.DecimalField(blank=True,null=True ,decimal_places=2,max_digits=10)\n\tscope    \t      = models.ForeignKey(Scope,on_delete=models.CASCADE ,blank=True,null=True , verbose_name='Scope')\n\n\tdef __str__(self):\n\t\treturn \"%s - %s\" %(self.chapter_name ,self.scope.project.project_name)\n\n\tclass Meta:        \n\t\tordering = ['code']\n\t\n\n#partidas del proyecto\n\n\nclass Task (models.Model):\n\tcode                 = models.CharField(\"Code\", max_length=200, blank=True,null=True )\n\ttask_name            = models.CharField(\"Task name \", max_length=200, blank=True,null=True )\n\t\n\tdescription          = models.TextField(\"coments\", max_length=400, blank=True,null=True,default='coments')\n\t\n\nclass Entry (models.Model):\n\n\tentry_name            = models.CharField(\"Entry name \", max_length=200, blank=True,null=True )\n\tcode                  = models.CharField(\"Code\", max_length=200, blank=True,null=True )\n\tdescription           = models.TextField(\"Coments\", max_length=400, blank=True,null=True,default='coments')\n\titems   \t          = models.ManyToManyField('invoices.Item',blank=True,verbose_name=\"Items\")\n\tchapter    \t          = models.ForeignKey(Chapter,on_delete=models.CASCADE ,blank=True ,null=True, verbose_name='Chapter - Project')\n\tproject    \t          = models.ForeignKey(Project,on_delete=models.CASCADE ,blank=True ,null=True, verbose_name='Project')\n\tscope_quantity\t\t  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tinvoice_quantity\t  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tplanif_quantity\t      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttarget_quantity\t      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\treal_quantity\t      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tscope_unt_price\t      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tinvoice_unt_price     = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tplanif_unt_price      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttarget_unt_price      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\treal_unt_price        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tscope_price\t\t      = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tinvoice_price         = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tplanif_price          = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttarget_price          = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\treal_price            = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\n\t\n\tdef save(self): \n\n\n\t\t##precios unitarios\n\t\tself.entry_item_price_target_list = self.entry_item_price_set.all()\n\t\tprice_list = self.entry_item_price_target_list.values_list('price_per_entry_unit',flat=True)\n\t\tsuma=0\n\t\tfor item in price_list:\n\t\t\tsuma=suma+item\n\t\tself.target_unt_price = suma\n\t\tself.scope_unt_price  = suma\n\t\t\n\n\n\t\t#medidas\n\t\t#scope\n\t\tself.scope_meassurements=self.scope_meassurement_set.all()\n\t\tscope_list =self.scope_meassurements.values_list('total_meassurement', flat=True)\n\t\tsuma=0\n\t\tfor i in scope_list:\n\t\t\tsuma = suma + i\n\t\tself.scope_quantity=suma\n\t\tif self.scope_quantity!=0 and self.scope_unt_price!=None  \t:\n\t\t\tself.scope_price= self.scope_unt_price*suma\n\t\telse:\n\t\t\tself.scope_price=0\t\t\n\t\t\n\n\t\t#invoice\n\t\tself.invoice_meassurements=self.invoice_meassurement_set.all()\n\t\tinvoices_list =self.invoice_meassurements.values_list('total_meassurement', flat=True)\n\t\tsuma=0\n\t\tfor i in invoices_list:\n\t\t\tsuma = suma + i\n\t\tself.invoice_quantity=suma\n\t\tif self.invoice_quantity!=0 and self.invoice_unt_price!=None:\n\t\t\tself.invoice_price= self.invoice_unt_price*self.invoice_quantity\n\t\telse:\n\t\t\tself.invoice_price=0\n\n\t\t#planif\n\t\tself.planif_meassurements=self.planification_meassurement_set.all()\n\t\tplanif_list =self.planif_meassurements.values_list('total_meassurement', flat=True)\n\t\tsuma=0\n\t\tfor i in planif_list:\n\t\t\tsuma = suma + i\n\t\tself.planif_quantity=suma\n\t\tif self.planif_quantity!=0 and self.planif_unt_price!=None:\n\t\t\tself.planif_price= self.planif_unt_price*self.planif_quantity\n\t\telse:\n\t\t\tself.planif_price=0\n\n\t\t#target\n\t\tself.target_meassurements=self.target_meassurement_set.all()\n\t\ttarget_list =self.target_meassurements.values_list('total_meassurement', flat=True)\n\t\tsuma=0\n\t\tfor i in target_list:\n\t\t\tsuma = suma + i\n\t\tself.target_quantity=suma\n\t\tif self.target_quantity!=0 and self.target_unt_price!=None:\n\t\t\tself.target_price= self.target_unt_price*self.target_quantity\n\t\telse:\n\t\t\tself.target_price=0\n\n\t\t#real\n\t\tself.real_meassurements=self.real_meassurement_set.all()\n\t\treal_list =self.real_meassurements.values_list('total_meassurement', flat=True)\n\t\tsuma=0\n\t\tfor i in real_list:\n\t\t\tsuma = suma + i\n\t\tself.real_quantity=suma\n\t\tif self.real_quantity!=0 and self.real_unt_price!=None:\n\t\t\tself.real_price= self.real_unt_price*self.real_quantity\n\t\telse:\n\t\t\tself.real_price=0\n\n\t\tsuper(Entry,self).save()\n#fin metodo save para Entries \n\n\n\tdef __str__(self):\n\t\treturn \"%s - %s\" %(self.entry_name ,self.project)\n\tclass Meta:        \n\t\tverbose_name = \"Project Entry\"\n\t\tverbose_name_plural = \"Project Entries\"\n\n\t\nclass Entry_Item_Price(models.Model):\n\titem                              = models.ForeignKey('invoices.Item', on_delete=models.CASCADE ,null=True,verbose_name=\"Item\")\n\tquantity_per_entry_unit_scope     = models.DecimalField('scope',blank=True,decimal_places=2,null=True,max_digits=20)\n\tquantity_per_entry_unit_real      = models.DecimalField('real',blank=True,decimal_places=2,null=True,max_digits=20)\n\titem_price                        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tprice_per_entry_unit              = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tquantity_needed \t\t          = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tentry                             = models.ForeignKey(Entry, on_delete=models.CASCADE ,null=True,verbose_name=\"Entry\")\n\tchapter \t\t                  = models.ForeignKey(Chapter, on_delete=models.CASCADE ,null=True,verbose_name=\"Chapter\")\n\tproject \t\t\t              = models.ForeignKey(Project, on_delete=models.CASCADE ,null=True,verbose_name=\"Project\")\n\n\t\n\n\tdef save(self):\n\t\tself.buyings= self.buying_entry_set.all()\n\t\tlista= self.buyings.values_list('quantity',flat=True)\n\t\tif self.entry.real_quantity:\n\t\t\tsuma=0\n\t\t\tfor obj in lista:\n\t\t\t\tsuma=suma+obj\n\t\tself.quantity_per_entry_unit_real=suma/self.entry.real_quantity\n\t\t\n\n\n\n\n\t\tself.price_per_entry_unit = self.item_price*self.quantity_per_entry_unit_scope\n\t\tself.quantity_needed = self.quantity_per_entry_unit_scope*self.entry.scope_quantity\n\t\tsuper(Entry_Item_Price,self).save()\n\n\tclass Meta:        \n\t\tverbose_name = \"Project Price\"\n\t\tverbose_name_plural = \"Project Prices\"\n\n\tdef __str__(self):\n\t\treturn \"%s - %s\" %(self.item ,self.project)\n\n# classes para las mediciones del presupuesto , objetivo , certificacion  y planificacion\n\nclass Scope_Meassurement(models.Model):\n\n\tentry               = models.ForeignKey(Entry, on_delete=models.CASCADE ,null=True,verbose_name=\"Entry\")\n\tcoments             = models.CharField(\"coments\", max_length=200, blank=True,null=True )\n\tud_type             = models.CharField(\"unidades\", max_length=200, blank=True,null=True )\n\tquantity\t\t\t= models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twidth\t\t        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\thigh    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twide    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttotal_meassurement  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tphase               = models.ForeignKey(Phase,on_delete=models.CASCADE ,blank=True,null=True , verbose_name='phase')\n\n\tclass Meta:        \n\t\tverbose_name = \"Scope Meassurement\"\n\t\tverbose_name_plural = \"Scope Meassurements\"\n\n\tdef save(self):\n\t\tA=[]\n\t\tB=[self.width,self.high,self.wide]\n\t\tfor i in B:\n\t\t\tif i!=None:\n\t\t\t\tA.append(i)\n\t\tC=1\n\t\tfor i in A:\n\t\t\tC=C*i\n\t\tif self.quantity:\n\t\t\tself.total_meassurement=self.quantity*C\n\t\telse:\n\t\t\tself.total_meassurement=0\n\t\tsuper(Scope_Meassurement,self).save()\n\t\t\nclass Invoice_Meassurement(models.Model):\n\n\tentry               = models.ForeignKey(Entry, on_delete=models.CASCADE ,null=True,verbose_name=\"Entry\")\n\tcoments             = models.CharField(\"coments\", max_length=200, blank=True,null=True )\n\tud_type             = models.CharField(\"unidades\", max_length=9, blank=True,null=True )\n\tquantity\t\t\t= models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twidth\t\t        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\thigh    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twide    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttotal_meassurement  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tphase               = models.ForeignKey(Phase,on_delete=models.CASCADE ,blank=True,null=True , verbose_name='phase')\n\n\t\n\tclass Meta:        \n\t\tverbose_name = \"Invoice Meassurement\"\n\t\tverbose_name_plural = \"invoice Meassurements\"\n\n\tdef save(self):\n\t\tA=[]\n\t\tB=[self.width,self.high,self.wide]\n\t\tfor i in B:\n\t\t\tif i!=None:\n\t\t\t\tA.append(i)\n\t\tC=1\n\t\tfor i in A:\n\t\t\tC=C*i\n\t\tif self.quantity:\n\t\t\tself.total_meassurement=self.quantity*C\n\t\telse:\n\t\t\tself.total_meassurement=0\n\t\tsuper(Invoice_Meassurement,self).save()\n\nclass Planification_Meassurement(models.Model):\n\n\tentry               = models.ForeignKey(Entry, on_delete=models.CASCADE ,null=True,verbose_name=\"Entry\")\n\tcoments             = models.CharField(\"coments\", max_length=200, blank=True,null=True )\n\tud_type             = models.CharField(\"unidades\", max_length=200, blank=True,null=True )\n\tquantity\t\t\t= models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twidth\t\t        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\thigh    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twide    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttotal_meassurement  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tphase               = models.ForeignKey(Phase,on_delete=models.CASCADE ,blank=True,null=True , verbose_name='phase')\n\n\tclass Meta:        \n\t\tverbose_name = \"Planification Meassurement\"\n\t\tverbose_name_plural = \"Planification Meassurements\"\n\n\n\tdef save(self):\n\t\tA=[]\n\t\tB=[self.width,self.high,self.wide]\n\t\tfor i in B:\n\t\t\tif i!=None:\n\t\t\t\tA.append(i)\n\t\tC=1\n\t\tfor i in A:\n\t\t\tC=C*i\n\t\tif self.quantity:\n\t\t\tself.total_meassurement=self.quantity*C\n\t\telse:\n\t\t\tself.total_meassurement=0\n\t\tsuper(Planification_Meassurement,self).save()\n\nclass Target_Meassurement(models.Model):\n\n\tentry               = models.ForeignKey(Entry, on_delete=models.CASCADE ,null=True,verbose_name=\"entry\")\n\tcoments             = models.CharField(\"coments\", max_length=200, blank=True,null=True )\n\tud_type             = models.CharField(\"unidades\", max_length=200, blank=True,null=True )\n\tquantity\t\t\t= models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twidth\t\t        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\thigh    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twide    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttotal_meassurement  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tphase               = models.ForeignKey(Phase,on_delete=models.CASCADE ,blank=True,null=True , verbose_name='phase')\n\n\tclass Meta:        \n\t\tverbose_name = \"Target Meassurement\"\n\t\tverbose_name_plural = \"Target Meassurements\"\n\n\tdef save(self):\n\t\tA=[]\n\t\tB=[self.width,self.high,self.wide]\n\t\tfor i in B:\n\t\t\tif i!=None:\n\t\t\t\tA.append(i)\n\t\tC=1\n\t\tfor i in A:\n\t\t\tC=C*i\n\t\tif self.quantity:\n\t\t\tself.total_meassurement=self.quantity*C\n\t\telse:\n\t\t\tself.total_meassurement=0\n\t\tsuper(Target_Meassurement,self).save()\t\t\n\nclass Real_Meassurement(models.Model):\n\n\tentry               = models.ForeignKey(Entry, on_delete=models.CASCADE ,null=True,verbose_name=\"entry\")\n\tcoments             = models.CharField(\"coments\", max_length=200, blank=True,null=True )\n\tud_type             = models.CharField(\"unidades\", max_length=200, blank=True,null=True )\n\tquantity\t\t\t= models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twidth\t\t        = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\thigh    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\twide    \t\t    = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\ttotal_meassurement  = models.DecimalField(blank=True,decimal_places=2,null=True,max_digits=20)\n\tphase               = models.ForeignKey(Phase,on_delete=models.CASCADE ,blank=True,null=True , verbose_name='phase')\n\n\tclass Meta:        \n\t\tverbose_name = \"Real Meassurement\"\n\t\tverbose_name_plural = \"Real Meassurements\"\n\n\tdef save(self):\n\t\tA=[]\n\t\tB=[self.width,self.high,self.wide]\n\t\tfor i in B:\n\t\t\tif i!=None:\n\t\t\t\tA.append(i)\n\t\tC=1\n\t\tfor i in A:\n\t\t\tC=C*i\n\t\tif self.quantity:\n\t\t\tself.total_meassurement=self.quantity*C\n\t\telse:\n\t\t\tself.total_meassurement=0\n\t\tsuper(Real_Meassurement,self).save()\t\t\n\n#senal para creacion automatica de sets de mediciones cuando creamos una partida \n\n\n@receiver(post_save, sender=Entry)\ndef create_meassurments(sender, instance, created, **kwargs):\n\t\n\tif created:\n\t\tojb=Invoice_Meassurement(entry=instance)\n\t\tojb1=Scope_Meassurement(entry=instance)\n\t\tojb2=Planification_Meassurement(entry=instance)\n\t\tojb3=Target_Meassurement(entry=instance)\n\t\tojb5=Real_Meassurement(entry=instance)\n\t\tojb4=Entry_Item_Price_Target(entry=instance)\n\t\tojb.save()\n\t\tojb1.save()\n\t\tojb2.save()\n\t\tojb3.save()\n\t\tojb4.save()\n\t\tojb5.save()\n\n\n#recaluclo de precios\n@receiver(post_save, sender=Entry_Item_Price)\ndef price_save(sender, instance, created, **kwargs):\n\t\n\tobj=Entry.objects.all()\n\tfor entity in obj:\n\t\tentity.save()  \n\n@receiver(post_delete, sender=Entry_Item_Price)\ndef price_delete(sender, instance,  **kwargs):\n\t\n\tobj=Entry.objects.all()\n\tfor entity in obj:\n\t\tentity.save() \n\t   \n\n@receiver(post_save, sender=Scope_Meassurement)\ndef Meassurements_scope_save(sender, instance, created, **kwargs):\n\t\n\tobj=Entry.objects.all()\n\tfor entity in obj:\n\t\tentity.save()  \n\tobj1=Phase.objects.all()\n\tfor entity in obj1:\n\t\tentity.save() \n\tobj2=Entry_Item_Price.objects.all()\n\tfor entity in obj2:\n\t\tentity.save()    \n\n@receiver(post_delete, sender=Scope_Meassurement)\ndef Meassurements_scope_delete(sender, instance,  **kwargs):\n\t\n\tobj=Entry.objects.all()\n\tfor entity in obj:\n\t\tentity.save() \n\tobj1=Phase.objects.all()\n\tfor entity in obj1:\n\t\tentity.save()\n\tobj2=Entry_Item_Price.objects.all()\n\tfor entity in obj2:\n\t\tentity.save()      \n\t\t\n#hacer lo mismo con resto de mediciones  importante\n\t\t\n\n\n\n\n\n\t\n\n\n\t\n\n\n\t\n\n\t",
			"file": "models.py",
			"file_size": 19446,
			"file_write_time": 131720776639509176,
			"settings":
			{
				"buffer_size": 19440,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/models.py",
			"settings":
			{
				"buffer_size": 7666,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "admin.py",
			"settings":
			{
				"buffer_size": 3044,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pa",
				"SublimeREPL: ABCL"
			],
			[
				"python f",
				"User: Python Flake8 Lint"
			],
			[
				"python p",
				"User: Python PEP8 Autoformat"
			],
			[
				"python pe",
				"User: Python PEP8 Autoformat"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"rep",
				"SublimeREPL: Python"
			],
			[
				"rp",
				"SublimeREPL: Python"
			],
			[
				"pythonre",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"python pep",
				"User: Python PEP8 Autoformat"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pyth",
				"Build With: Python3"
			],
			[
				"python",
				"Build With: Python"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			]
		],
		"width": 412.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/fernandogarciafonseca/Desktop/fernando-django",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/migrations",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/profiles",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/profiles/migrations",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/migrations",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/migrations/__pycache__",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/quotes",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/quotes/migrations",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/migrations",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static/static",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static/static/js"
	],
	"file_history":
	[
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/models.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/admin.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static/static/js/users.js",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/admin.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/templates/users/client_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/lib/python3.6/site-packages/django/db/models/deletion.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/project_seeder.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/models.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/document_manager/models.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/templates/projects/partial_project_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/forms.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/templates/projects/project_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/templates/projects/forms.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/projects/urls.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/fernando/urls.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/templates/nav_bar2.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/templates/users/partial_user_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/profiles/admin.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/fernando/settings.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/templates/items/base1.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/templates/items/item_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/templates/items/partial_item_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/views.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/templates/users/base1.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/templates/items/partial_item_create.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/templates/items/partial_item_form.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/forms.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/urls.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/views.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static/static-only/js/users.js",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/signals/signals.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/__init__.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/apps.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/signals/handlers.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/profiles/models.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/profiles/apps.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/profiles/__init__.py",
		"/Users/fernandogarciafonseca/Desktop/fer.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/models.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static/static/js/users2.js",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/templates/entry/entry_create.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/users2.js",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/static/static/js/users1.js",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/client_list.html",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/users/admin.py",
		"/Users/fernandogarciafonseca/Desktop/fernando-django/lib/python3.6/site-packages/pip/_internal/commands/search.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/users.js",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/service/image.service.ts",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/gallery/image-list/image.component.ts",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/gallery/image-list/image-list.component.ts",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/gallery/image-list/image.component.html",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/models/image.ts",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/gallery/image-list/image-list.component.html",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/app.component.html",
		"/Users/fernandogarciafonseca/Desktop/Angular/nggallery/src/app/gallery/gallery.component.html",
		"/Users/fernandogarciafonseca/angular-tour-of-heroes/README.md",
		"/Users/fernandogarciafonseca/angular-tour-of-heroes/src/app/app.component.ts",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/nav_bar.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/base.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/registration/password_reset_complete.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/users1.js",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/registration/password_reset_confirm.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/myproject/urls.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/partial_user_create.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/registration/password_reset_done.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/registration/password_reset_form.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/registration/password_reset_email.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/login.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/nav_bar2.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/templates/registration/password_reset_subject.txt",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/views.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/partial_user_list.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/urls.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/registration/password_reset_form.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/myproject/settings.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/home.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/partial_user_form.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/users_check.js",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/models.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/views.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/invoices/models.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/projects/models.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/base1.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/templates/profiles/client_detail.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/models.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/partial_user_update.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/document_manager/models.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/quotes/models.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/urls.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/templates/profiles/partial_client_profile_list.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/decorators.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/templates/profiles/client_profile_list.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/forms.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/clients.js",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/templates/profiles/urls.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/profiles/templates/profiles/client_profile_detail.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/css/mystyle.css",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/css/bootstrap.css",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/css/styles.css",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/css/bootstrap-3.3.7.css",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/bootstrap.js",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/partial_user_delete.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/forms.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/static/static/js/script.js",
		"/Users/fernandogarciafonseca/Desktop/django-project/lib/python3.6/site-packages/django/views/templates/technical_500.html",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/templates/users/forms.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/admin.py",
		"/Users/fernandogarciafonseca/Desktop/django-project/myproject/apps/users/managers.py",
		"/Users/fernandogarciafonseca/Desktop/proyecto_django/mi_proyecto/my_project/my_project/settings.py",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/strata/settings.py",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/organizer/urls.py",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/strata/urls.py",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/organizer/templates/organizer/index.html",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/organizer/views.py",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/organizer/static/css/bootstrap.css",
		"/Users/fernandogarciafonseca/Desktop/django/django/strata/organizer/templates/organizer/organizer.html",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/suorganicer/urls.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/suorganicer/settings.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/organicer/admin.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/organicer/views.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/organicer/models.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/organicer/urls.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/organicer/fer.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/blog/models.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/helloworld/views.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/helloworld/urls.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/urls.py",
		"/Users/fernandogarciafonseca/Desktop/Curso_django/curso_django/suorganicer/organicer/apps.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1135,
						"regions":
						{
						},
						"selection":
						[
							[
								997,
								997
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19440,
						"regions":
						{
						},
						"selection":
						[
							[
								7209,
								7209
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3330.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/fernandogarciafonseca/Desktop/fernando-django/fernando/apps/invoices/models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7666,
						"regions":
						{
						},
						"selection":
						[
							[
								4238,
								4238
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1126.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "admin.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3044,
						"regions":
						{
						},
						"selection":
						[
							[
								2813,
								2813
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1084.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 256.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 102.0
	},
	"pinned_build_system": "Packages/Python 3/Python3.sublime-build",
	"project": "fernando.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 181.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
